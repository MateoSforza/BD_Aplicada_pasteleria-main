Estructura del proyecto Panel de Control Pastelería
===================================================

Este proyecto está dividido en dos grandes partes: backend y frontend, cada una con su propia estructura y tecnologías, para mantener el código organizado, escalable y fácil de mantener.

1. backend/
------------
- package.json: Define las dependencias y scripts del backend (Node.js + Express + TypeScript).
- tsconfig.json: Configuración de TypeScript para compilar el código fuente a JavaScript.
- src/index.ts: Punto de entrada del servidor Express. Aquí se inicializa la API que se conectará a la base de datos SQL Server.

Motivo de la estructura:
- Separar el backend permite gestionar la lógica de negocio, la conexión a la base de datos y la API REST de forma independiente al frontend.
- El uso de TypeScript (.ts) en el backend ayuda a evitar errores y mejora el autocompletado y la documentación del código.

2. frontend/
-------------
- package.json: Define las dependencias y scripts del frontend (React + TypeScript + Vite).
- tsconfig.json: Configuración de TypeScript para el frontend.
- vite.config.ts: Configuración de Vite, el bundler moderno para React.
- index.html: Archivo HTML principal donde se monta la aplicación React.
- src/main.tsx: Punto de entrada de React. Aquí se monta el componente principal en el DOM.
- src/App.tsx: Componente principal de la aplicación React.

Motivo de la estructura:
- Separar el frontend permite desarrollar la interfaz de usuario de forma desacoplada del backend.
- El uso de TypeScript (.tsx) en React permite escribir componentes con tipado fuerte y JSX (sintaxis de componentes).
- El archivo index.html es necesario para que Vite y React tengan un punto de montaje en el navegador.

Sobre las extensiones de archivo:
- .ts: Archivos TypeScript estándar, usados para lógica sin JSX (backend y utilidades frontend).
- .tsx: Archivos TypeScript que usan JSX, necesarios para componentes React.
- .html: Archivo de estructura base para la web, donde se monta la app React.

Nombres:
- Los nombres siguen convenciones estándar para que cualquier desarrollador pueda entender rápidamente la función de cada archivo.
- "App" es el nombre típico para el componente raíz en React.
- "index" se usa para los puntos de entrada tanto en backend como en frontend.

Esta organización facilita el trabajo en equipo, la escalabilidad y el mantenimiento del proyecto a largo plazo.


3. REGLAS
Log in
dashboard inicial
dashboard drill up/down de tortas,medidas y ingredientes tal cual como en la app maui
apartado de estadisticas, (que ingrediente se utiliza mas, busqueda de ingredientes, tortas, etc) 
3 PERIODOS, POR EJEMPLO ALTA BAJA MEDIA  rojo amarillo verde
